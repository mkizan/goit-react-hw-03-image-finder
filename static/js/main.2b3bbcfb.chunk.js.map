{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","services/pixabayApi.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.jsx","index.js"],"names":["SearchBar","state","searchQuery","handleQueryChange","event","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","LoaderReact","color","height","width","timeout","api","getData","query","page","per_page","BASE_URL","API_KEY","url","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","imageQuery","openModal","map","id","webformatURL","largeImageURL","tags","onClick","src","alt","Button","onPushButton","modalRoot","document","querySelector","Modal","handleOnKeyDown","code","closeModal","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","largeImage","ImageGallery","images","showModal","isLoading","status","fetchImages","setTimeout","pixabayApi","data","prevState","hits","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","length","Loader","message","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b3bbcfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nclass SearchBar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleQueryChange = event => {\n    this.setState({ searchQuery: event.currentTarget.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.searchQuery.trim() === '') {\n      toast.error('Enter the name of your picture theme');\n      return;\n    }\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"on\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchQuery}\n            onChange={this.handleQueryChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nclass LoaderReact extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Grid\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={5000}\n        className=\"loader\"\n      />\n    );\n  }\n}\n\nexport default LoaderReact;\n","function getData(query, page, per_page = 12) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const API_KEY = '21953239-920783d9236e07918df0be6ca';\n  const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${per_page}`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`Нет изображений по вашему запросу ${query}`),\n    );\n  });\n}\n\nconst api = { getData };\n\nexport default api;\n\n// .finally(() => this.setState({ loading: false }));\n//   axios\n//     .get(url)\n//     .then(fetchData => this.setState({ images: fetchData.data.hits }))\n//     .catch(error => this.setState({ error }))\n//     .finally(() => this.setState({ loading: false }));\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ imageQuery, openModal }) => {\n  return (\n    <>\n      {imageQuery.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <li\n          className=\"ImageGalleryItem\"\n          key={id}\n          onClick={() => openModal(largeImageURL)}\n        >\n          <img\n            src={webformatURL}\n            alt={tags}\n            className=\"ImageGalleryItem-image\"\n          />\n        </li>\n      ))}\n    </>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  imageQuery: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onPushButton }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onPushButton}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onPushButton: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleOnKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleOnKeyDown);\n  }\n\n  handleOnKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.closeModal();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.closeModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.largeImage} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  largeImage: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component, Fragment } from 'react';\nimport Loader from '../Loader';\nimport pixabayApi from '../../services/pixabayApi';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport Modal from '../Modal';\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    largeImage: '',\n    page: 1,\n    error: '',\n    showModal: false,\n    isLoading: false,\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.searchQuery !== this.props.searchQuery) {\n      this.setState({\n        images: [],\n        page: 1,\n        status: 'pending',\n      });\n      this.fetchImages();\n    } else if (this.state.page !== 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  openModal = largeImage => {\n    this.setState({ showModal: true, largeImage });\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false, largeImage: '' });\n  };\n\n  fetchImages = () => {\n    this.setState({ isLoading: true });\n\n    setTimeout(() => {\n      pixabayApi\n        .getData(this.props.searchQuery, this.state.page)\n        .then(data => {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...data.hits],\n            page: prevState.page + 1,\n            status: 'resolved',\n          }));\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }))\n        .finally(() => this.setState({ isLoading: false }));\n    }, 100);\n  };\n\n  render() {\n    const { images, error, isLoading, largeImage, showModal, status } =\n      this.state;\n    const { searchQuery } = this.props;\n\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    if (status === 'idle') {\n      return <p>Enter your request</p>;\n    }\n\n    if (status === 'pending') {\n      return <Loader />;\n    }\n\n    if (status === 'rejected') {\n      return <p>{error.message}</p>;\n    }\n    if (status === 'resolved') {\n      return (\n        <Fragment>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem imageQuery={images} openModal={this.openModal} />\n          </ul>\n          {images.length === 0 && (\n            <p>{`No images for your request \"${searchQuery}\"`}</p>\n          )}\n          {showModal && (\n            <Modal closeModal={this.closeModal} largeImage={largeImage} />\n          )}\n          {isLoading && <Loader />}\n          {shouldRenderLoadMoreButton && (\n            <Button onPushButton={this.fetchImages} />\n          )}\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchBar onSubmit={this.handleFormSubmit} />\n        <ToastContainer autoClose={3000} />\n        <ImageGallery searchQuery={this.state.searchQuery} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}